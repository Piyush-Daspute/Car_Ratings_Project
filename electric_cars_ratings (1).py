# -*- coding: utf-8 -*-
"""Electric_Cars_Ratings

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XmD9qzlPE9nTf9ky_62vICoZF1gNGOWx
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import linear_model
df = pd.read_csv("/content/ElectricCarData_Clean.csv")
df["Price_Rupee"] = df["PriceEuro"]*90
df.head()
original_df = df.copy()

df.isna().sum()

df.duplicated().sum()
df.head()

df["Range_Km"].skew()

sns.boxplot(df["Range_Km"])

sns.boxplot(df["AccelSec"])

sns.boxplot(df["TopSpeed_KmH"])

sns.boxplot(df["Efficiency_WhKm"])

s = df.Range_Km.std()
y = df.Range_Km.mean()
for x in df.Range_Km:
  if x < y - s*3 or x > y + s*3:
    i = df[df.Range_Km == x].index
    df.drop(i,inplace = True)

s = df.TopSpeed_KmH.std()
y = df.TopSpeed_KmH.mean()
for x in df.TopSpeed_KmH:
  if x < y - s*3 or x > y + s*3:
    i = df[df.TopSpeed_KmH == x].index
    df.drop(i,inplace = True)


p25=df['AccelSec'].quantile(0.25)
p75=df['AccelSec'].quantile(0.75)
diff =p75 - p25
upperlimit=p75 + 1.5*diff
lowerlimit=p25 - 1.5*diff
df['AccelSec']=np.where(df['AccelSec'] >upperlimit, upperlimit,
                           np.where(df['AccelSec'] < lowerlimit, lowerlimit, df['AccelSec']))


p25=df['Efficiency_WhKm'].quantile(0.25)
p75=df['Efficiency_WhKm'].quantile(0.75)
diff =p75 - p25
upperlimit=p75 + 1.5*diff
lowerlimit=p25 - 1.5*diff
df['Efficiency_WhKm']=np.where(df['Efficiency_WhKm'] >upperlimit, upperlimit,
                           np.where(df['Efficiency_WhKm'] < lowerlimit, lowerlimit, df['Efficiency_WhKm']))

df["Range_Km"].skew()

sns.boxplot(df["Range_Km"])

sns.boxplot(df["AccelSec"])

sns.boxplot(df["TopSpeed_KmH"])

sns.boxplot(df["Efficiency_WhKm"])

minrange = int(np.floor(min(df['AccelSec'])))
print(minrange)

maxrange = int(np.floor(max(df['AccelSec'])))
minrange = int(np.floor(min(df['AccelSec'])))
ageRange = maxrange - minrange
bins =10
binwidth = int(np.ceil(ageRange/bins))


lables = [10,9,8,7,6,5]
intervals = [ a for a in range(minrange, maxrange+binwidth, binwidth) ]
intervals

df["AccelSec"] = pd.cut(df["AccelSec"], bins=intervals, labels=lables, include_lowest=True)
df["AccelSec"]

maxrange = int(np.ceil(max(df['TopSpeed_KmH'])))
minrange = int(np.floor(min(df['TopSpeed_KmH'])))
ageRange = maxrange - minrange
bins =10
binwidth = int(np.round(ageRange/bins))


lables = [1,2,3,4,5,6,7,8,9,10]
intervals = [ a for a in range(minrange, maxrange+binwidth, binwidth) ]
intervals

df["TopSpeed_KmH"] = pd.cut(df["TopSpeed_KmH"], bins=intervals, labels=lables, include_lowest=True)
df["TopSpeed_KmH"]

maxrange = int(np.ceil(max(df['Range_Km'])))
minrange = int(np.floor(min(df['Range_Km'])))
ageRange = maxrange - minrange
bins =10
binwidth = int(np.round(ageRange/bins))


lables = [1,2,3,4,5,6,7,8,9,10]
intervals = [ a for a in range(minrange, maxrange+binwidth, binwidth) ]
intervals

df["Range_Km"] = pd.cut(df["Range_Km"], bins=intervals, labels=lables, include_lowest=True)
df["Range_Km"]

maxrange = int(np.ceil(max(df['Efficiency_WhKm'])))
minrange = int(np.floor(min(df['Efficiency_WhKm'])))
ageRange = maxrange - minrange
bins =10
binwidth = int(np.round(ageRange/bins))


lables = [1,2,3,4,5,6,7,8,9,10]
intervals = [ a for a in range(minrange, maxrange+binwidth, binwidth) ]
intervals

df["Efficiency_WhKm"] = pd.cut(df["Efficiency_WhKm"], bins=intervals, labels=lables, include_lowest=True)
df["Efficiency_WhKm"]

lables1 = [1500000,2000000,2500000,3000000,3500000,4000000,5000000,6000000,7000000,8000000,10000000,12000000,14000000,17000000]
df["Price_Rupee_Range"] = pd.cut(df["Price_Rupee"],bins = lables1,labels=None,include_lowest=True)

df.drop("FastCharge_KmH",axis = 1,inplace = True)
df.drop("PlugType",axis = 1,inplace = True)
df.drop("Segment",axis = 1,inplace = True)
df["Range_Km"] = df["Range_Km"].astype(float)
df["AccelSec"] = df["AccelSec"].astype(float)
df["Efficiency_WhKm"] = df["Efficiency_WhKm"].astype(float)
df["TopSpeed_KmH"] = df["TopSpeed_KmH"].astype(float)
df["Final_Stars"] = (df["AccelSec"] + df["Efficiency_WhKm"] + df["TopSpeed_KmH"] + df["Range_Km"])/4
df.head()

x = df.groupby("Price_Rupee_Range")["Final_Stars"].mean()
print(x)

y = x.to_dict()
print(y)
df.groupby("Price_Rupee_Range")["Final_Stars"].mean().plot.bar()
plt.show

df.groupby("Brand")["Price_Rupee_Range"].count().plot.bar()

df.BodyStyle.hist(rwidth = 0.5)

df.isna().sum()

df.isna().sum()

df.dropna(inplace = True)

reg = linear_model.LinearRegression()
reg.fit(df[["AccelSec","Efficiency_WhKm","Range_Km","TopSpeed_KmH"]],df.Final_Stars)

reg.coef_

reg.intercept_

reg.predict([[7,6,7,5]])